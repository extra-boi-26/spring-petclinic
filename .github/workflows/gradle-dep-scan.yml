name: Gradle Dependency Scan (Java 17)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * 1"   # Mondays 2 AM UTC

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - uses: actions/checkout@v4

      # 2️⃣ Setup Java 17
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3️⃣ Cache Gradle dependencies and wrapper
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-v4-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      # 4️⃣ Cache OWASP Dependency-Check CVE data
      - name: Prepare Dependency-Check data dir
        run: echo "DC_DATA=$HOME/.dc-data" >> $GITHUB_ENV

      - name: Cache DC data
        uses: actions/cache@v4
        with:
          path: ${{ env.DC_DATA }}
          key: ${{ runner.os }}-dcdata-v1
          restore-keys: ${{ runner.os }}-dcdata-

      # 5️⃣ List tasks (debugging aid)
      - name: Show available Gradle tasks
        run: ./gradlew tasks --all

      # 6️⃣ Generate dependency update report
      - name: Outdated dependencies
        run: ./gradlew dependencyUpdates --stacktrace --warning-mode=all

      # 7️⃣ OWASP CVE scan (uses your NVD API key)
      - name: OWASP CVE scan
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
        run: |
          ./gradlew dependencyCheckAnalyze \
            -Dorg.owasp.dependencycheck.nvd.api.key="${NVD_API_KEY}" \
            -Dorg.owasp.dependencycheck.data.directory="${DC_DATA}" \
            --stacktrace --warning-mode=all

      # 8️⃣ Upload all reports so you can download them
      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dep-reports
          path: |
            build/dependencyUpdates/**
            build/reports/**
